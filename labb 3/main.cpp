/*
Битовые операции — это операции, выполняемые над отдельными битами (0 или 1) числовых данных.
Каждое число в памяти компьютера представлено в двоичном виде, и битовые операции позволяют напрямую работать с этим представлением.

Признак
                        Битовые операции                                                Логические операции
Область действия - Работают с каждым битом числа -                          Работают с логическими значениями (true/false)
Типы данных - Применяются к целым типам (int, unsigned int, long и т.д.) - Применяются к логическим типам (bool, результаты сравнений)
Результат -         Новое числовое значение                                         Логическое значение true или false
Пример
5 & 3 → 1 (0101 & 0011 = 0001)
(5 > 3) && (3 > 2) → true

Операция        Символ       Название                    Описание
&                AND       Побитовое И         Бит равен 1, если оба бита равны 1
|                or             ИЛИ                     Побитовое ИЛИ
^                XOR       Исключающее ИЛИ     Бит равен 1, если только один из битов равен 1
~                NOT        Побитовое НЕ        Инвертирует все биты (0 → 1, 1 → 0)
<<          Сдвиг влево      Left shift        Сдвигает все биты влево на указанное количество позиций (ЭКВИВАЛЕНТНО УМНОЖЕНИЮ НА 2^N)
>>          Сдвиг вправо     Right shift       Сдвигает все биты вправо на указанное количество позиций


a = 5 (0101)
b = 11(1011)
(И & 0001)
(ИЛИ | 1111)
(ИСКЛЮЧАЮЩЕЕ ИЛИ ^ 1110)
(ПОБИТОВОЕ НЕ ~ 0000 0101 = 1111 1010)
(CДВИГ ВЛЕВО << 0000 0011 << 0000 0110)

Битовая маска — это число (обычно целое), в котором определённые биты установлены в 1, чтобы выделить, проверить или изменить соответствующие биты в другом числе.

Маска — это как шаблон, по которому мы выбираем нужные биты из числа.

Зачем нужна битовая маска

Битовые маски позволяют:
Проверять состояние определённого бита
Устанавливать (включать) бит
Сбрасывать (выключать) бит
Инвертировать бит

Это используется, например:
При управлении портами ввода-вывода микроконтроллеров;
В графике, сетевом программировании и др.

СБРОС БИТА - &~
ИНВЕРСИЯ БИТА ^

МАСКА С ПОМОЩЬЮ СДВИГА: int mask = 1 << 3

*/

#include <iostream>
int main() {
int a = 0b00111010;
int mask = 0b00010000;
int nomask = 0b11110111;
if (a & mask) {
    std::cout << '1' << std::endl;
}
if ( a | mask) {
        std::cout << '1' << std::endl;
}
else {
    std::cout << '0' << std::endl;
}

unsigned int x;
int i;
int bitt;
std::cout << "num::" << std::endl;
std::cin >> x;
std::cout << "i:" << std::endl;
std::cin >> i;
unsigned int maska = 1 << i;
if (x & maska) {
    bitt = 1;
}
else {
    bitt = 0;
}
std::cout << "i: " << i << " в числе " << x << "равен:" << bitt << std::endl;


}